---
# the alaveteli repo to use
# Note: this is the alaveteli app which is normally fetched from
# https://github.com/mysociety/alaveteli/
# but this setting allows us to use a fork and branch
# for hotfixes or customisations
alaveteli_repo: "https://github.com/mysociety/alaveteli/"
# the branch, tag or commit ref to checkout. Defaults to master
alaveteli_commit: "0.35.0.0"

user_support_emails: dada@where.tf

db_name_production: alaveteli_production
db_name_test: alaveteli_test
db_user_password: "{{ lookup('env', 'DB_USER_PASSWORD_STAGING') }}"

# this one is in vault.yml, encrypted
rails_secret_key_base: "{{ vault_rails_secret_key_base }}"

site_domain: dadastaging.okfn.fr

# hostname of the server
server_name: dadastage
server_fqdn: "{{ server_name }}.{{ site_domain }}"

# these env vars come from travis secret variables
incoming_email_secret: "{{ lookup('env', 'INCOMING_EMAIL_SECRET_STAGING') }}"

emergency_admin_password: "{{ lookup('env', 'EMERGENCY_ADMIN_PASSWORD_STAGING') }}"

recaptcha_site_key: 6LcrJJ4UAAAAAAokc-1h06cfzlQgTsjeQMsyd7en

recaptcha_secret_key: "{{ lookup('env', 'RECAPTCHA_SECRET_KEY_STAGING') }}"

# send all requests to public bodies to this email instead
# useful for staging, set to empty string in production
override_all_public_body_emails: dada@where.tf

# change the prefix for staging/production
# to limit confusion
incoming_email_short_prefix: dadastaging
incoming_email_prefix: "{{ incoming_email_short_prefix }}+"

# git branch in theme repo to use for the site
# the production site should use master
theme_branch: staging

# folder where exim will write incoming emails
raw_emails_location: files/raw_emails

# api token to download the translations
# Any account that has access to them should work
transifex_token: "{{ lookup('env', 'TRANSIFEX_TOKEN') }}"

# disable crawling by bots (at least the ones respecting robots.txt)
do_not_crawl: true

# disable db backup on staging server
backup_storage_access_key: ""
backup_storage_secret_key: ""

db_backup_walg_envdir: /etc/wal-g.d/env
db_backup_archive_mode: "off"
db_backup_archive_command: ""
db_backup_storage_endpoint: "https://sos-ch-gva-2.exo.io"
db_backup_storage_prefix: "s3://madada-db-backup"

# files backup, for incoming emails
files_backup_restic_envdir: /etc/restic/env
files_backup_restic_repository: "{{ lookup('env', 'RESTIC_REPOSITORY') }}"
files_backup_restic_password: "{{ lookup('env', 'RESTIC_PASSWORD') }}"
